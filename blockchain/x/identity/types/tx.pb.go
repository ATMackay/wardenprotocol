// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: wardenprotocol/identity/tx.proto

package types

import (
	context "context"
	fmt "fmt"
	grpc1 "github.com/cosmos/gogoproto/grpc"
	proto "github.com/cosmos/gogoproto/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type MsgNewSpace struct {
	Creator          string   `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	AdminIntentId    uint64   `protobuf:"varint,2,opt,name=admin_intent_id,json=adminIntentId,proto3" json:"admin_intent_id,omitempty"`
	SignIntentId     uint64   `protobuf:"varint,3,opt,name=sign_intent_id,json=signIntentId,proto3" json:"sign_intent_id,omitempty"`
	AdditionalOwners []string `protobuf:"bytes,4,rep,name=additional_owners,json=additionalOwners,proto3" json:"additional_owners,omitempty"`
}

func (m *MsgNewSpace) Reset()         { *m = MsgNewSpace{} }
func (m *MsgNewSpace) String() string { return proto.CompactTextString(m) }
func (*MsgNewSpace) ProtoMessage()    {}
func (*MsgNewSpace) Descriptor() ([]byte, []int) {
	return fileDescriptor_637a1af1df56f70a, []int{0}
}
func (m *MsgNewSpace) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgNewSpace) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgNewSpace.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgNewSpace) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgNewSpace.Merge(m, src)
}
func (m *MsgNewSpace) XXX_Size() int {
	return m.Size()
}
func (m *MsgNewSpace) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgNewSpace.DiscardUnknown(m)
}

var xxx_messageInfo_MsgNewSpace proto.InternalMessageInfo

func (m *MsgNewSpace) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgNewSpace) GetAdminIntentId() uint64 {
	if m != nil {
		return m.AdminIntentId
	}
	return 0
}

func (m *MsgNewSpace) GetSignIntentId() uint64 {
	if m != nil {
		return m.SignIntentId
	}
	return 0
}

func (m *MsgNewSpace) GetAdditionalOwners() []string {
	if m != nil {
		return m.AdditionalOwners
	}
	return nil
}

type MsgNewSpaceResponse struct {
	Address string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
}

func (m *MsgNewSpaceResponse) Reset()         { *m = MsgNewSpaceResponse{} }
func (m *MsgNewSpaceResponse) String() string { return proto.CompactTextString(m) }
func (*MsgNewSpaceResponse) ProtoMessage()    {}
func (*MsgNewSpaceResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_637a1af1df56f70a, []int{1}
}
func (m *MsgNewSpaceResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgNewSpaceResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgNewSpaceResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgNewSpaceResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgNewSpaceResponse.Merge(m, src)
}
func (m *MsgNewSpaceResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgNewSpaceResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgNewSpaceResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgNewSpaceResponse proto.InternalMessageInfo

func (m *MsgNewSpaceResponse) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

type MsgAddSpaceOwner struct {
	Creator   string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	SpaceAddr string `protobuf:"bytes,2,opt,name=space_addr,json=spaceAddr,proto3" json:"space_addr,omitempty"`
	NewOwner  string `protobuf:"bytes,3,opt,name=new_owner,json=newOwner,proto3" json:"new_owner,omitempty"`
	Btl       uint64 `protobuf:"varint,4,opt,name=btl,proto3" json:"btl,omitempty"`
}

func (m *MsgAddSpaceOwner) Reset()         { *m = MsgAddSpaceOwner{} }
func (m *MsgAddSpaceOwner) String() string { return proto.CompactTextString(m) }
func (*MsgAddSpaceOwner) ProtoMessage()    {}
func (*MsgAddSpaceOwner) Descriptor() ([]byte, []int) {
	return fileDescriptor_637a1af1df56f70a, []int{2}
}
func (m *MsgAddSpaceOwner) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgAddSpaceOwner) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgAddSpaceOwner.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgAddSpaceOwner) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgAddSpaceOwner.Merge(m, src)
}
func (m *MsgAddSpaceOwner) XXX_Size() int {
	return m.Size()
}
func (m *MsgAddSpaceOwner) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgAddSpaceOwner.DiscardUnknown(m)
}

var xxx_messageInfo_MsgAddSpaceOwner proto.InternalMessageInfo

func (m *MsgAddSpaceOwner) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgAddSpaceOwner) GetSpaceAddr() string {
	if m != nil {
		return m.SpaceAddr
	}
	return ""
}

func (m *MsgAddSpaceOwner) GetNewOwner() string {
	if m != nil {
		return m.NewOwner
	}
	return ""
}

func (m *MsgAddSpaceOwner) GetBtl() uint64 {
	if m != nil {
		return m.Btl
	}
	return 0
}

type MsgAddSpaceOwnerResponse struct {
}

func (m *MsgAddSpaceOwnerResponse) Reset()         { *m = MsgAddSpaceOwnerResponse{} }
func (m *MsgAddSpaceOwnerResponse) String() string { return proto.CompactTextString(m) }
func (*MsgAddSpaceOwnerResponse) ProtoMessage()    {}
func (*MsgAddSpaceOwnerResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_637a1af1df56f70a, []int{3}
}
func (m *MsgAddSpaceOwnerResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgAddSpaceOwnerResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgAddSpaceOwnerResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgAddSpaceOwnerResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgAddSpaceOwnerResponse.Merge(m, src)
}
func (m *MsgAddSpaceOwnerResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgAddSpaceOwnerResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgAddSpaceOwnerResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgAddSpaceOwnerResponse proto.InternalMessageInfo

type MsgRemoveSpaceOwner struct {
	Creator   string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	SpaceAddr string `protobuf:"bytes,2,opt,name=space_addr,json=spaceAddr,proto3" json:"space_addr,omitempty"`
	Owner     string `protobuf:"bytes,3,opt,name=owner,proto3" json:"owner,omitempty"`
	Btl       uint64 `protobuf:"varint,4,opt,name=btl,proto3" json:"btl,omitempty"`
}

func (m *MsgRemoveSpaceOwner) Reset()         { *m = MsgRemoveSpaceOwner{} }
func (m *MsgRemoveSpaceOwner) String() string { return proto.CompactTextString(m) }
func (*MsgRemoveSpaceOwner) ProtoMessage()    {}
func (*MsgRemoveSpaceOwner) Descriptor() ([]byte, []int) {
	return fileDescriptor_637a1af1df56f70a, []int{4}
}
func (m *MsgRemoveSpaceOwner) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgRemoveSpaceOwner) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgRemoveSpaceOwner.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgRemoveSpaceOwner) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgRemoveSpaceOwner.Merge(m, src)
}
func (m *MsgRemoveSpaceOwner) XXX_Size() int {
	return m.Size()
}
func (m *MsgRemoveSpaceOwner) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgRemoveSpaceOwner.DiscardUnknown(m)
}

var xxx_messageInfo_MsgRemoveSpaceOwner proto.InternalMessageInfo

func (m *MsgRemoveSpaceOwner) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgRemoveSpaceOwner) GetSpaceAddr() string {
	if m != nil {
		return m.SpaceAddr
	}
	return ""
}

func (m *MsgRemoveSpaceOwner) GetOwner() string {
	if m != nil {
		return m.Owner
	}
	return ""
}

func (m *MsgRemoveSpaceOwner) GetBtl() uint64 {
	if m != nil {
		return m.Btl
	}
	return 0
}

type MsgRemoveSpaceOwnerResponse struct {
}

func (m *MsgRemoveSpaceOwnerResponse) Reset()         { *m = MsgRemoveSpaceOwnerResponse{} }
func (m *MsgRemoveSpaceOwnerResponse) String() string { return proto.CompactTextString(m) }
func (*MsgRemoveSpaceOwnerResponse) ProtoMessage()    {}
func (*MsgRemoveSpaceOwnerResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_637a1af1df56f70a, []int{5}
}
func (m *MsgRemoveSpaceOwnerResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgRemoveSpaceOwnerResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgRemoveSpaceOwnerResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgRemoveSpaceOwnerResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgRemoveSpaceOwnerResponse.Merge(m, src)
}
func (m *MsgRemoveSpaceOwnerResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgRemoveSpaceOwnerResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgRemoveSpaceOwnerResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgRemoveSpaceOwnerResponse proto.InternalMessageInfo

type MsgNewKeychain struct {
	Creator       string        `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Description   string        `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	AdminIntentId uint64        `protobuf:"varint,3,opt,name=admin_intent_id,json=adminIntentId,proto3" json:"admin_intent_id,omitempty"`
	Fees          *KeychainFees `protobuf:"bytes,4,opt,name=fees,proto3" json:"fees,omitempty"`
}

func (m *MsgNewKeychain) Reset()         { *m = MsgNewKeychain{} }
func (m *MsgNewKeychain) String() string { return proto.CompactTextString(m) }
func (*MsgNewKeychain) ProtoMessage()    {}
func (*MsgNewKeychain) Descriptor() ([]byte, []int) {
	return fileDescriptor_637a1af1df56f70a, []int{6}
}
func (m *MsgNewKeychain) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgNewKeychain) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgNewKeychain.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgNewKeychain) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgNewKeychain.Merge(m, src)
}
func (m *MsgNewKeychain) XXX_Size() int {
	return m.Size()
}
func (m *MsgNewKeychain) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgNewKeychain.DiscardUnknown(m)
}

var xxx_messageInfo_MsgNewKeychain proto.InternalMessageInfo

func (m *MsgNewKeychain) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgNewKeychain) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *MsgNewKeychain) GetAdminIntentId() uint64 {
	if m != nil {
		return m.AdminIntentId
	}
	return 0
}

func (m *MsgNewKeychain) GetFees() *KeychainFees {
	if m != nil {
		return m.Fees
	}
	return nil
}

type MsgNewKeychainResponse struct {
	Address string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
}

func (m *MsgNewKeychainResponse) Reset()         { *m = MsgNewKeychainResponse{} }
func (m *MsgNewKeychainResponse) String() string { return proto.CompactTextString(m) }
func (*MsgNewKeychainResponse) ProtoMessage()    {}
func (*MsgNewKeychainResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_637a1af1df56f70a, []int{7}
}
func (m *MsgNewKeychainResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgNewKeychainResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgNewKeychainResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgNewKeychainResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgNewKeychainResponse.Merge(m, src)
}
func (m *MsgNewKeychainResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgNewKeychainResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgNewKeychainResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgNewKeychainResponse proto.InternalMessageInfo

func (m *MsgNewKeychainResponse) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

type MsgAddKeychainParty struct {
	Creator      string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	KeychainAddr string `protobuf:"bytes,2,opt,name=keychain_addr,json=keychainAddr,proto3" json:"keychain_addr,omitempty"`
	Party        string `protobuf:"bytes,3,opt,name=party,proto3" json:"party,omitempty"`
}

func (m *MsgAddKeychainParty) Reset()         { *m = MsgAddKeychainParty{} }
func (m *MsgAddKeychainParty) String() string { return proto.CompactTextString(m) }
func (*MsgAddKeychainParty) ProtoMessage()    {}
func (*MsgAddKeychainParty) Descriptor() ([]byte, []int) {
	return fileDescriptor_637a1af1df56f70a, []int{8}
}
func (m *MsgAddKeychainParty) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgAddKeychainParty) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgAddKeychainParty.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgAddKeychainParty) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgAddKeychainParty.Merge(m, src)
}
func (m *MsgAddKeychainParty) XXX_Size() int {
	return m.Size()
}
func (m *MsgAddKeychainParty) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgAddKeychainParty.DiscardUnknown(m)
}

var xxx_messageInfo_MsgAddKeychainParty proto.InternalMessageInfo

func (m *MsgAddKeychainParty) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgAddKeychainParty) GetKeychainAddr() string {
	if m != nil {
		return m.KeychainAddr
	}
	return ""
}

func (m *MsgAddKeychainParty) GetParty() string {
	if m != nil {
		return m.Party
	}
	return ""
}

type MsgAddKeychainPartyResponse struct {
}

func (m *MsgAddKeychainPartyResponse) Reset()         { *m = MsgAddKeychainPartyResponse{} }
func (m *MsgAddKeychainPartyResponse) String() string { return proto.CompactTextString(m) }
func (*MsgAddKeychainPartyResponse) ProtoMessage()    {}
func (*MsgAddKeychainPartyResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_637a1af1df56f70a, []int{9}
}
func (m *MsgAddKeychainPartyResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgAddKeychainPartyResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgAddKeychainPartyResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgAddKeychainPartyResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgAddKeychainPartyResponse.Merge(m, src)
}
func (m *MsgAddKeychainPartyResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgAddKeychainPartyResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgAddKeychainPartyResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgAddKeychainPartyResponse proto.InternalMessageInfo

type MsgAppendChildSpace struct {
	Creator         string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	ParentSpaceAddr string `protobuf:"bytes,2,opt,name=parent_space_addr,json=parentSpaceAddr,proto3" json:"parent_space_addr,omitempty"`
	ChildSpaceAddr  string `protobuf:"bytes,3,opt,name=child_space_addr,json=childSpaceAddr,proto3" json:"child_space_addr,omitempty"`
	Btl             uint64 `protobuf:"varint,4,opt,name=btl,proto3" json:"btl,omitempty"`
}

func (m *MsgAppendChildSpace) Reset()         { *m = MsgAppendChildSpace{} }
func (m *MsgAppendChildSpace) String() string { return proto.CompactTextString(m) }
func (*MsgAppendChildSpace) ProtoMessage()    {}
func (*MsgAppendChildSpace) Descriptor() ([]byte, []int) {
	return fileDescriptor_637a1af1df56f70a, []int{10}
}
func (m *MsgAppendChildSpace) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgAppendChildSpace) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgAppendChildSpace.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgAppendChildSpace) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgAppendChildSpace.Merge(m, src)
}
func (m *MsgAppendChildSpace) XXX_Size() int {
	return m.Size()
}
func (m *MsgAppendChildSpace) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgAppendChildSpace.DiscardUnknown(m)
}

var xxx_messageInfo_MsgAppendChildSpace proto.InternalMessageInfo

func (m *MsgAppendChildSpace) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgAppendChildSpace) GetParentSpaceAddr() string {
	if m != nil {
		return m.ParentSpaceAddr
	}
	return ""
}

func (m *MsgAppendChildSpace) GetChildSpaceAddr() string {
	if m != nil {
		return m.ChildSpaceAddr
	}
	return ""
}

func (m *MsgAppendChildSpace) GetBtl() uint64 {
	if m != nil {
		return m.Btl
	}
	return 0
}

type MsgAppendChildSpaceResponse struct {
}

func (m *MsgAppendChildSpaceResponse) Reset()         { *m = MsgAppendChildSpaceResponse{} }
func (m *MsgAppendChildSpaceResponse) String() string { return proto.CompactTextString(m) }
func (*MsgAppendChildSpaceResponse) ProtoMessage()    {}
func (*MsgAppendChildSpaceResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_637a1af1df56f70a, []int{11}
}
func (m *MsgAppendChildSpaceResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgAppendChildSpaceResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgAppendChildSpaceResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgAppendChildSpaceResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgAppendChildSpaceResponse.Merge(m, src)
}
func (m *MsgAppendChildSpaceResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgAppendChildSpaceResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgAppendChildSpaceResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgAppendChildSpaceResponse proto.InternalMessageInfo

type MsgNewChildSpace struct {
	Creator         string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	ParentSpaceAddr string `protobuf:"bytes,2,opt,name=parent_space_addr,json=parentSpaceAddr,proto3" json:"parent_space_addr,omitempty"`
	Btl             uint64 `protobuf:"varint,3,opt,name=btl,proto3" json:"btl,omitempty"`
}

func (m *MsgNewChildSpace) Reset()         { *m = MsgNewChildSpace{} }
func (m *MsgNewChildSpace) String() string { return proto.CompactTextString(m) }
func (*MsgNewChildSpace) ProtoMessage()    {}
func (*MsgNewChildSpace) Descriptor() ([]byte, []int) {
	return fileDescriptor_637a1af1df56f70a, []int{12}
}
func (m *MsgNewChildSpace) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgNewChildSpace) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgNewChildSpace.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgNewChildSpace) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgNewChildSpace.Merge(m, src)
}
func (m *MsgNewChildSpace) XXX_Size() int {
	return m.Size()
}
func (m *MsgNewChildSpace) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgNewChildSpace.DiscardUnknown(m)
}

var xxx_messageInfo_MsgNewChildSpace proto.InternalMessageInfo

func (m *MsgNewChildSpace) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgNewChildSpace) GetParentSpaceAddr() string {
	if m != nil {
		return m.ParentSpaceAddr
	}
	return ""
}

func (m *MsgNewChildSpace) GetBtl() uint64 {
	if m != nil {
		return m.Btl
	}
	return 0
}

type MsgNewChildSpaceResponse struct {
}

func (m *MsgNewChildSpaceResponse) Reset()         { *m = MsgNewChildSpaceResponse{} }
func (m *MsgNewChildSpaceResponse) String() string { return proto.CompactTextString(m) }
func (*MsgNewChildSpaceResponse) ProtoMessage()    {}
func (*MsgNewChildSpaceResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_637a1af1df56f70a, []int{13}
}
func (m *MsgNewChildSpaceResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgNewChildSpaceResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgNewChildSpaceResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgNewChildSpaceResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgNewChildSpaceResponse.Merge(m, src)
}
func (m *MsgNewChildSpaceResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgNewChildSpaceResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgNewChildSpaceResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgNewChildSpaceResponse proto.InternalMessageInfo

type MsgUpdateSpace struct {
	Creator       string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	SpaceAddr     string `protobuf:"bytes,2,opt,name=space_addr,json=spaceAddr,proto3" json:"space_addr,omitempty"`
	AdminIntentId uint64 `protobuf:"varint,3,opt,name=admin_intent_id,json=adminIntentId,proto3" json:"admin_intent_id,omitempty"`
	SignIntentId  uint64 `protobuf:"varint,4,opt,name=sign_intent_id,json=signIntentId,proto3" json:"sign_intent_id,omitempty"`
	Btl           uint64 `protobuf:"varint,5,opt,name=btl,proto3" json:"btl,omitempty"`
}

func (m *MsgUpdateSpace) Reset()         { *m = MsgUpdateSpace{} }
func (m *MsgUpdateSpace) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateSpace) ProtoMessage()    {}
func (*MsgUpdateSpace) Descriptor() ([]byte, []int) {
	return fileDescriptor_637a1af1df56f70a, []int{14}
}
func (m *MsgUpdateSpace) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateSpace) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateSpace.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateSpace) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateSpace.Merge(m, src)
}
func (m *MsgUpdateSpace) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateSpace) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateSpace.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateSpace proto.InternalMessageInfo

func (m *MsgUpdateSpace) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgUpdateSpace) GetSpaceAddr() string {
	if m != nil {
		return m.SpaceAddr
	}
	return ""
}

func (m *MsgUpdateSpace) GetAdminIntentId() uint64 {
	if m != nil {
		return m.AdminIntentId
	}
	return 0
}

func (m *MsgUpdateSpace) GetSignIntentId() uint64 {
	if m != nil {
		return m.SignIntentId
	}
	return 0
}

func (m *MsgUpdateSpace) GetBtl() uint64 {
	if m != nil {
		return m.Btl
	}
	return 0
}

type MsgUpdateSpaceResponse struct {
}

func (m *MsgUpdateSpaceResponse) Reset()         { *m = MsgUpdateSpaceResponse{} }
func (m *MsgUpdateSpaceResponse) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateSpaceResponse) ProtoMessage()    {}
func (*MsgUpdateSpaceResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_637a1af1df56f70a, []int{15}
}
func (m *MsgUpdateSpaceResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateSpaceResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateSpaceResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateSpaceResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateSpaceResponse.Merge(m, src)
}
func (m *MsgUpdateSpaceResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateSpaceResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateSpaceResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateSpaceResponse proto.InternalMessageInfo

type MsgUpdateKeychain struct {
	Creator      string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	KeychainAddr string `protobuf:"bytes,2,opt,name=keychain_addr,json=keychainAddr,proto3" json:"keychain_addr,omitempty"`
	Description  string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	IsActive     bool   `protobuf:"varint,4,opt,name=is_active,json=isActive,proto3" json:"is_active,omitempty"`
}

func (m *MsgUpdateKeychain) Reset()         { *m = MsgUpdateKeychain{} }
func (m *MsgUpdateKeychain) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateKeychain) ProtoMessage()    {}
func (*MsgUpdateKeychain) Descriptor() ([]byte, []int) {
	return fileDescriptor_637a1af1df56f70a, []int{16}
}
func (m *MsgUpdateKeychain) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateKeychain) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateKeychain.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateKeychain) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateKeychain.Merge(m, src)
}
func (m *MsgUpdateKeychain) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateKeychain) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateKeychain.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateKeychain proto.InternalMessageInfo

func (m *MsgUpdateKeychain) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgUpdateKeychain) GetKeychainAddr() string {
	if m != nil {
		return m.KeychainAddr
	}
	return ""
}

func (m *MsgUpdateKeychain) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *MsgUpdateKeychain) GetIsActive() bool {
	if m != nil {
		return m.IsActive
	}
	return false
}

type MsgUpdateKeychainResponse struct {
}

func (m *MsgUpdateKeychainResponse) Reset()         { *m = MsgUpdateKeychainResponse{} }
func (m *MsgUpdateKeychainResponse) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateKeychainResponse) ProtoMessage()    {}
func (*MsgUpdateKeychainResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_637a1af1df56f70a, []int{17}
}
func (m *MsgUpdateKeychainResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateKeychainResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateKeychainResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateKeychainResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateKeychainResponse.Merge(m, src)
}
func (m *MsgUpdateKeychainResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateKeychainResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateKeychainResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateKeychainResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*MsgNewSpace)(nil), "wardenprotocol.identity.MsgNewSpace")
	proto.RegisterType((*MsgNewSpaceResponse)(nil), "wardenprotocol.identity.MsgNewSpaceResponse")
	proto.RegisterType((*MsgAddSpaceOwner)(nil), "wardenprotocol.identity.MsgAddSpaceOwner")
	proto.RegisterType((*MsgAddSpaceOwnerResponse)(nil), "wardenprotocol.identity.MsgAddSpaceOwnerResponse")
	proto.RegisterType((*MsgRemoveSpaceOwner)(nil), "wardenprotocol.identity.MsgRemoveSpaceOwner")
	proto.RegisterType((*MsgRemoveSpaceOwnerResponse)(nil), "wardenprotocol.identity.MsgRemoveSpaceOwnerResponse")
	proto.RegisterType((*MsgNewKeychain)(nil), "wardenprotocol.identity.MsgNewKeychain")
	proto.RegisterType((*MsgNewKeychainResponse)(nil), "wardenprotocol.identity.MsgNewKeychainResponse")
	proto.RegisterType((*MsgAddKeychainParty)(nil), "wardenprotocol.identity.MsgAddKeychainParty")
	proto.RegisterType((*MsgAddKeychainPartyResponse)(nil), "wardenprotocol.identity.MsgAddKeychainPartyResponse")
	proto.RegisterType((*MsgAppendChildSpace)(nil), "wardenprotocol.identity.MsgAppendChildSpace")
	proto.RegisterType((*MsgAppendChildSpaceResponse)(nil), "wardenprotocol.identity.MsgAppendChildSpaceResponse")
	proto.RegisterType((*MsgNewChildSpace)(nil), "wardenprotocol.identity.MsgNewChildSpace")
	proto.RegisterType((*MsgNewChildSpaceResponse)(nil), "wardenprotocol.identity.MsgNewChildSpaceResponse")
	proto.RegisterType((*MsgUpdateSpace)(nil), "wardenprotocol.identity.MsgUpdateSpace")
	proto.RegisterType((*MsgUpdateSpaceResponse)(nil), "wardenprotocol.identity.MsgUpdateSpaceResponse")
	proto.RegisterType((*MsgUpdateKeychain)(nil), "wardenprotocol.identity.MsgUpdateKeychain")
	proto.RegisterType((*MsgUpdateKeychainResponse)(nil), "wardenprotocol.identity.MsgUpdateKeychainResponse")
}

func init() { proto.RegisterFile("wardenprotocol/identity/tx.proto", fileDescriptor_637a1af1df56f70a) }

var fileDescriptor_637a1af1df56f70a = []byte{
	// 781 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x56, 0xc1, 0x6e, 0xd3, 0x4a,
	0x14, 0xad, 0x5f, 0xd2, 0xd7, 0xf8, 0xa6, 0x4d, 0x53, 0xbf, 0x27, 0x30, 0x89, 0x1a, 0x45, 0xa6,
	0x94, 0xb4, 0x94, 0x44, 0x0d, 0x6c, 0x58, 0x06, 0x24, 0xa4, 0xaa, 0x6a, 0x41, 0xae, 0xd8, 0xb0,
	0x20, 0x72, 0x3c, 0x43, 0x3a, 0x25, 0xb1, 0x8d, 0xc7, 0x24, 0x0d, 0x5f, 0x01, 0x2b, 0xf6, 0xec,
	0x58, 0xf1, 0x1b, 0x2c, 0xbb, 0x64, 0x89, 0xda, 0x0f, 0xe0, 0x17, 0x90, 0xc7, 0xf1, 0x74, 0xec,
	0x24, 0xb6, 0x91, 0xba, 0xcb, 0xdc, 0x39, 0x33, 0xf7, 0xdc, 0x3b, 0xe7, 0x9e, 0x18, 0xea, 0x63,
	0xc3, 0x45, 0xd8, 0x72, 0x5c, 0xdb, 0xb3, 0x4d, 0x7b, 0xd0, 0x22, 0x08, 0x5b, 0x1e, 0xf1, 0x26,
	0x2d, 0xef, 0xbc, 0xc9, 0x82, 0xca, 0xed, 0x28, 0xa2, 0x19, 0x22, 0x2a, 0xdb, 0x8b, 0x8e, 0xbe,
	0xc3, 0x13, 0xf3, 0xd4, 0x20, 0x56, 0x70, 0x81, 0xf6, 0x55, 0x82, 0xe2, 0x11, 0xed, 0x1f, 0xe3,
	0xf1, 0x89, 0x63, 0x98, 0x58, 0x51, 0x61, 0xc5, 0x74, 0xb1, 0xe1, 0xd9, 0xae, 0x2a, 0xd5, 0xa5,
	0x86, 0xac, 0x87, 0x4b, 0x65, 0x1b, 0xd6, 0x0d, 0x34, 0x24, 0x56, 0x97, 0x58, 0x1e, 0xb6, 0xbc,
	0x2e, 0x41, 0xea, 0x3f, 0x75, 0xa9, 0x91, 0xd7, 0xd7, 0x58, 0xf8, 0x80, 0x45, 0x0f, 0x90, 0xb2,
	0x05, 0x25, 0x4a, 0xfa, 0x22, 0x2c, 0xc7, 0x60, 0xab, 0x7e, 0x94, 0xa3, 0x1e, 0xc0, 0x86, 0x81,
	0x10, 0xf1, 0x88, 0x6d, 0x19, 0x83, 0xae, 0x3d, 0xb6, 0xb0, 0x4b, 0xd5, 0x7c, 0x3d, 0xd7, 0x90,
	0xf5, 0xf2, 0xf5, 0xc6, 0x0b, 0x16, 0xd7, 0x5a, 0xf0, 0x9f, 0xc0, 0x51, 0xc7, 0xd4, 0xb1, 0x2d,
	0xca, 0xb8, 0x1a, 0x08, 0xb9, 0x98, 0xd2, 0x90, 0xeb, 0x74, 0xa9, 0x7d, 0x84, 0xf2, 0x11, 0xed,
	0x77, 0x10, 0x62, 0x07, 0xd8, 0x2d, 0x09, 0x95, 0x6d, 0x02, 0x50, 0x1f, 0xd7, 0xf5, 0x8f, 0xb3,
	0xa2, 0x64, 0x5d, 0x66, 0x91, 0x0e, 0x42, 0xae, 0x52, 0x05, 0xd9, 0xc2, 0xe3, 0x80, 0x23, 0xab,
	0x45, 0xd6, 0x0b, 0x16, 0x1e, 0x07, 0xb7, 0x96, 0x21, 0xd7, 0xf3, 0x06, 0x6a, 0x9e, 0x95, 0xe8,
	0xff, 0xd4, 0x2a, 0xa0, 0xc6, 0x73, 0x87, 0x8c, 0xb5, 0x11, 0x2b, 0x44, 0xc7, 0x43, 0x7b, 0x84,
	0x6f, 0x82, 0xda, 0xff, 0xb0, 0x2c, 0xd2, 0x0a, 0x16, 0x73, 0x38, 0x6d, 0x42, 0x75, 0x4e, 0x5e,
	0x4e, 0xeb, 0xbb, 0x04, 0xa5, 0xa0, 0xc1, 0x87, 0x53, 0x75, 0x24, 0x50, 0xaa, 0x43, 0x11, 0x61,
	0x6a, 0xba, 0xc4, 0xf1, 0xdf, 0x68, 0xca, 0x49, 0x0c, 0xcd, 0x53, 0x4a, 0x6e, 0x9e, 0x52, 0x9e,
	0x40, 0xfe, 0x2d, 0xc6, 0x94, 0x11, 0x2d, 0xb6, 0xef, 0x35, 0x17, 0x68, 0xb9, 0x19, 0x92, 0x7a,
	0x8e, 0x31, 0xd5, 0xd9, 0x11, 0xad, 0x0d, 0xb7, 0xa2, 0x84, 0x33, 0x88, 0xe2, 0x8c, 0x35, 0xbf,
	0x83, 0x50, 0x78, 0xe6, 0xa5, 0xe1, 0x7a, 0x93, 0x84, 0x4a, 0xef, 0xc2, 0x5a, 0x38, 0x2d, 0x62,
	0xff, 0x57, 0xc3, 0x60, 0xf8, 0x04, 0x8e, 0x7f, 0x4f, 0xf8, 0x04, 0x6c, 0x31, 0x6d, 0x78, 0x3c,
	0x17, 0x6f, 0xf8, 0x17, 0x29, 0xe0, 0xe2, 0x38, 0xd8, 0x42, 0xcf, 0x4e, 0xc9, 0x00, 0xa5, 0x4d,
	0xdf, 0x2e, 0x6c, 0x38, 0x86, 0xeb, 0x77, 0x73, 0x46, 0x0f, 0xeb, 0xc1, 0xc6, 0x09, 0x57, 0x45,
	0x03, 0xca, 0xa6, 0x7f, 0xa7, 0x08, 0x0d, 0xd8, 0x95, 0x4c, 0x9e, 0x8b, 0x21, 0x17, 0x29, 0x25,
	0x4e, 0x8c, 0x13, 0x3f, 0x63, 0x83, 0x75, 0x8c, 0xc7, 0x37, 0x4e, 0x7a, 0x4a, 0x25, 0x17, 0x1f,
	0xa4, 0x48, 0x2e, 0xce, 0xe3, 0x5b, 0xa0, 0xd8, 0x57, 0x0e, 0x32, 0x3c, 0x9c, 0x46, 0x23, 0x65,
	0x88, 0xb2, 0xca, 0x75, 0xd6, 0xd8, 0xf2, 0x73, 0x8c, 0x6d, 0x5a, 0xc7, 0xf2, 0x75, 0x1d, 0x2a,
	0xd3, 0xaa, 0x40, 0x95, 0x57, 0xf1, 0x59, 0x82, 0x0d, 0xbe, 0x95, 0x61, 0xf4, 0x32, 0x09, 0x32,
	0x36, 0x9f, 0xb9, 0xd9, 0xf9, 0xac, 0x82, 0x4c, 0x68, 0xd7, 0x30, 0x3d, 0x32, 0xc2, 0xac, 0x86,
	0x82, 0x5e, 0x20, 0xb4, 0xc3, 0xd6, 0x5a, 0x15, 0xee, 0xcc, 0x50, 0x0a, 0x09, 0xb7, 0x7f, 0xaf,
	0x40, 0xee, 0x88, 0xf6, 0x95, 0x37, 0x50, 0xe0, 0xff, 0x18, 0x5b, 0x0b, 0xe7, 0x56, 0xf0, 0xec,
	0xca, 0x5e, 0x16, 0x14, 0x1f, 0xe2, 0x21, 0xac, 0x45, 0xcd, 0x7b, 0x27, 0xe9, 0x78, 0x04, 0x5a,
	0xd9, 0xcf, 0x0c, 0xe5, 0xe9, 0x46, 0x50, 0x9e, 0xf1, 0xe4, 0x44, 0xc2, 0x71, 0x74, 0xe5, 0xf1,
	0xdf, 0xa0, 0x79, 0xde, 0x3e, 0x14, 0x45, 0xcf, 0xbd, 0x9f, 0xd2, 0xa3, 0x10, 0x58, 0x69, 0x65,
	0x04, 0x8a, 0x05, 0xce, 0xf8, 0xde, 0x5e, 0x4a, 0x9f, 0x22, 0xe8, 0xe4, 0x02, 0x17, 0xf9, 0x1c,
	0xcb, 0x1b, 0xf7, 0xb8, 0xe4, 0xbc, 0x31, 0x74, 0x4a, 0xde, 0x05, 0x36, 0xe5, 0xeb, 0x27, 0xea,
	0x51, 0x3b, 0x29, 0x1d, 0x13, 0x32, 0xee, 0x67, 0x86, 0x8a, 0xef, 0x28, 0x3a, 0x51, 0xe2, 0x3b,
	0x0a, 0xc0, 0xe4, 0x77, 0x9c, 0x63, 0x18, 0x8a, 0x03, 0xa5, 0x98, 0x59, 0xec, 0xa6, 0x5f, 0xc1,
	0x65, 0xd3, 0xce, 0x8e, 0x0d, 0x33, 0x3e, 0x3d, 0xfc, 0x71, 0x59, 0x93, 0x2e, 0x2e, 0x6b, 0xd2,
	0xaf, 0xcb, 0x9a, 0xf4, 0xe9, 0xaa, 0xb6, 0x74, 0x71, 0x55, 0x5b, 0xfa, 0x79, 0x55, 0x5b, 0x7a,
	0xbd, 0xdf, 0x27, 0xde, 0xe9, 0x87, 0x5e, 0xd3, 0xb4, 0x87, 0x2d, 0xfc, 0xfe, 0xe1, 0xc0, 0xe8,
	0xb5, 0x62, 0xdf, 0x9c, 0xe7, 0xc2, 0x07, 0xeb, 0xc4, 0xc1, 0xb4, 0xf7, 0x2f, 0xdb, 0x7a, 0xf4,
	0x27, 0x00, 0x00, 0xff, 0xff, 0x94, 0xe0, 0x06, 0x46, 0xd8, 0x0a, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MsgClient is the client API for Msg service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MsgClient interface {
	// Create a new Space. The user will be the first owner of the space.
	NewSpace(ctx context.Context, in *MsgNewSpace, opts ...grpc.CallOption) (*MsgNewSpaceResponse, error)
	// Add a new owner to a space.
	AddSpaceOwner(ctx context.Context, in *MsgAddSpaceOwner, opts ...grpc.CallOption) (*MsgAddSpaceOwnerResponse, error)
	// Remove an owner from the space. The user can remove itself, but at
	// least one owner must be left.
	RemoveSpaceOwner(ctx context.Context, in *MsgRemoveSpaceOwner, opts ...grpc.CallOption) (*MsgRemoveSpaceOwnerResponse, error)
	// Create a new keychain. The user will be the first admin of the keychain.
	NewKeychain(ctx context.Context, in *MsgNewKeychain, opts ...grpc.CallOption) (*MsgNewKeychainResponse, error)
	// Add a new party to a keychain. Transactions coming from this party will
	// be considered trusted by the keychain.
	AddKeychainParty(ctx context.Context, in *MsgAddKeychainParty, opts ...grpc.CallOption) (*MsgAddKeychainPartyResponse, error)
	// TODO: document AppendChildSpace
	AppendChildSpace(ctx context.Context, in *MsgAppendChildSpace, opts ...grpc.CallOption) (*MsgAppendChildSpaceResponse, error)
	// TODO: document NewChildSpace
	NewChildSpace(ctx context.Context, in *MsgNewChildSpace, opts ...grpc.CallOption) (*MsgNewChildSpaceResponse, error)
	// Update a space, e.g. changing the intents in use.
	UpdateSpace(ctx context.Context, in *MsgUpdateSpace, opts ...grpc.CallOption) (*MsgUpdateSpaceResponse, error)
	// Update a keychain, e.g. update the status or description.
	UpdateKeychain(ctx context.Context, in *MsgUpdateKeychain, opts ...grpc.CallOption) (*MsgUpdateKeychainResponse, error)
}

type msgClient struct {
	cc grpc1.ClientConn
}

func NewMsgClient(cc grpc1.ClientConn) MsgClient {
	return &msgClient{cc}
}

func (c *msgClient) NewSpace(ctx context.Context, in *MsgNewSpace, opts ...grpc.CallOption) (*MsgNewSpaceResponse, error) {
	out := new(MsgNewSpaceResponse)
	err := c.cc.Invoke(ctx, "/wardenprotocol.identity.Msg/NewSpace", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) AddSpaceOwner(ctx context.Context, in *MsgAddSpaceOwner, opts ...grpc.CallOption) (*MsgAddSpaceOwnerResponse, error) {
	out := new(MsgAddSpaceOwnerResponse)
	err := c.cc.Invoke(ctx, "/wardenprotocol.identity.Msg/AddSpaceOwner", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) RemoveSpaceOwner(ctx context.Context, in *MsgRemoveSpaceOwner, opts ...grpc.CallOption) (*MsgRemoveSpaceOwnerResponse, error) {
	out := new(MsgRemoveSpaceOwnerResponse)
	err := c.cc.Invoke(ctx, "/wardenprotocol.identity.Msg/RemoveSpaceOwner", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) NewKeychain(ctx context.Context, in *MsgNewKeychain, opts ...grpc.CallOption) (*MsgNewKeychainResponse, error) {
	out := new(MsgNewKeychainResponse)
	err := c.cc.Invoke(ctx, "/wardenprotocol.identity.Msg/NewKeychain", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) AddKeychainParty(ctx context.Context, in *MsgAddKeychainParty, opts ...grpc.CallOption) (*MsgAddKeychainPartyResponse, error) {
	out := new(MsgAddKeychainPartyResponse)
	err := c.cc.Invoke(ctx, "/wardenprotocol.identity.Msg/AddKeychainParty", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) AppendChildSpace(ctx context.Context, in *MsgAppendChildSpace, opts ...grpc.CallOption) (*MsgAppendChildSpaceResponse, error) {
	out := new(MsgAppendChildSpaceResponse)
	err := c.cc.Invoke(ctx, "/wardenprotocol.identity.Msg/AppendChildSpace", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) NewChildSpace(ctx context.Context, in *MsgNewChildSpace, opts ...grpc.CallOption) (*MsgNewChildSpaceResponse, error) {
	out := new(MsgNewChildSpaceResponse)
	err := c.cc.Invoke(ctx, "/wardenprotocol.identity.Msg/NewChildSpace", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) UpdateSpace(ctx context.Context, in *MsgUpdateSpace, opts ...grpc.CallOption) (*MsgUpdateSpaceResponse, error) {
	out := new(MsgUpdateSpaceResponse)
	err := c.cc.Invoke(ctx, "/wardenprotocol.identity.Msg/UpdateSpace", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) UpdateKeychain(ctx context.Context, in *MsgUpdateKeychain, opts ...grpc.CallOption) (*MsgUpdateKeychainResponse, error) {
	out := new(MsgUpdateKeychainResponse)
	err := c.cc.Invoke(ctx, "/wardenprotocol.identity.Msg/UpdateKeychain", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MsgServer is the server API for Msg service.
type MsgServer interface {
	// Create a new Space. The user will be the first owner of the space.
	NewSpace(context.Context, *MsgNewSpace) (*MsgNewSpaceResponse, error)
	// Add a new owner to a space.
	AddSpaceOwner(context.Context, *MsgAddSpaceOwner) (*MsgAddSpaceOwnerResponse, error)
	// Remove an owner from the space. The user can remove itself, but at
	// least one owner must be left.
	RemoveSpaceOwner(context.Context, *MsgRemoveSpaceOwner) (*MsgRemoveSpaceOwnerResponse, error)
	// Create a new keychain. The user will be the first admin of the keychain.
	NewKeychain(context.Context, *MsgNewKeychain) (*MsgNewKeychainResponse, error)
	// Add a new party to a keychain. Transactions coming from this party will
	// be considered trusted by the keychain.
	AddKeychainParty(context.Context, *MsgAddKeychainParty) (*MsgAddKeychainPartyResponse, error)
	// TODO: document AppendChildSpace
	AppendChildSpace(context.Context, *MsgAppendChildSpace) (*MsgAppendChildSpaceResponse, error)
	// TODO: document NewChildSpace
	NewChildSpace(context.Context, *MsgNewChildSpace) (*MsgNewChildSpaceResponse, error)
	// Update a space, e.g. changing the intents in use.
	UpdateSpace(context.Context, *MsgUpdateSpace) (*MsgUpdateSpaceResponse, error)
	// Update a keychain, e.g. update the status or description.
	UpdateKeychain(context.Context, *MsgUpdateKeychain) (*MsgUpdateKeychainResponse, error)
}

// UnimplementedMsgServer can be embedded to have forward compatible implementations.
type UnimplementedMsgServer struct {
}

func (*UnimplementedMsgServer) NewSpace(ctx context.Context, req *MsgNewSpace) (*MsgNewSpaceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method NewSpace not implemented")
}
func (*UnimplementedMsgServer) AddSpaceOwner(ctx context.Context, req *MsgAddSpaceOwner) (*MsgAddSpaceOwnerResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddSpaceOwner not implemented")
}
func (*UnimplementedMsgServer) RemoveSpaceOwner(ctx context.Context, req *MsgRemoveSpaceOwner) (*MsgRemoveSpaceOwnerResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoveSpaceOwner not implemented")
}
func (*UnimplementedMsgServer) NewKeychain(ctx context.Context, req *MsgNewKeychain) (*MsgNewKeychainResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method NewKeychain not implemented")
}
func (*UnimplementedMsgServer) AddKeychainParty(ctx context.Context, req *MsgAddKeychainParty) (*MsgAddKeychainPartyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddKeychainParty not implemented")
}
func (*UnimplementedMsgServer) AppendChildSpace(ctx context.Context, req *MsgAppendChildSpace) (*MsgAppendChildSpaceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AppendChildSpace not implemented")
}
func (*UnimplementedMsgServer) NewChildSpace(ctx context.Context, req *MsgNewChildSpace) (*MsgNewChildSpaceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method NewChildSpace not implemented")
}
func (*UnimplementedMsgServer) UpdateSpace(ctx context.Context, req *MsgUpdateSpace) (*MsgUpdateSpaceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateSpace not implemented")
}
func (*UnimplementedMsgServer) UpdateKeychain(ctx context.Context, req *MsgUpdateKeychain) (*MsgUpdateKeychainResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateKeychain not implemented")
}

func RegisterMsgServer(s grpc1.Server, srv MsgServer) {
	s.RegisterService(&_Msg_serviceDesc, srv)
}

func _Msg_NewSpace_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgNewSpace)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).NewSpace(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/wardenprotocol.identity.Msg/NewSpace",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).NewSpace(ctx, req.(*MsgNewSpace))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_AddSpaceOwner_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgAddSpaceOwner)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).AddSpaceOwner(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/wardenprotocol.identity.Msg/AddSpaceOwner",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).AddSpaceOwner(ctx, req.(*MsgAddSpaceOwner))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_RemoveSpaceOwner_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgRemoveSpaceOwner)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).RemoveSpaceOwner(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/wardenprotocol.identity.Msg/RemoveSpaceOwner",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).RemoveSpaceOwner(ctx, req.(*MsgRemoveSpaceOwner))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_NewKeychain_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgNewKeychain)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).NewKeychain(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/wardenprotocol.identity.Msg/NewKeychain",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).NewKeychain(ctx, req.(*MsgNewKeychain))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_AddKeychainParty_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgAddKeychainParty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).AddKeychainParty(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/wardenprotocol.identity.Msg/AddKeychainParty",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).AddKeychainParty(ctx, req.(*MsgAddKeychainParty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_AppendChildSpace_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgAppendChildSpace)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).AppendChildSpace(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/wardenprotocol.identity.Msg/AppendChildSpace",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).AppendChildSpace(ctx, req.(*MsgAppendChildSpace))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_NewChildSpace_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgNewChildSpace)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).NewChildSpace(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/wardenprotocol.identity.Msg/NewChildSpace",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).NewChildSpace(ctx, req.(*MsgNewChildSpace))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_UpdateSpace_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUpdateSpace)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).UpdateSpace(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/wardenprotocol.identity.Msg/UpdateSpace",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).UpdateSpace(ctx, req.(*MsgUpdateSpace))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_UpdateKeychain_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUpdateKeychain)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).UpdateKeychain(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/wardenprotocol.identity.Msg/UpdateKeychain",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).UpdateKeychain(ctx, req.(*MsgUpdateKeychain))
	}
	return interceptor(ctx, in, info, handler)
}

var _Msg_serviceDesc = grpc.ServiceDesc{
	ServiceName: "wardenprotocol.identity.Msg",
	HandlerType: (*MsgServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "NewSpace",
			Handler:    _Msg_NewSpace_Handler,
		},
		{
			MethodName: "AddSpaceOwner",
			Handler:    _Msg_AddSpaceOwner_Handler,
		},
		{
			MethodName: "RemoveSpaceOwner",
			Handler:    _Msg_RemoveSpaceOwner_Handler,
		},
		{
			MethodName: "NewKeychain",
			Handler:    _Msg_NewKeychain_Handler,
		},
		{
			MethodName: "AddKeychainParty",
			Handler:    _Msg_AddKeychainParty_Handler,
		},
		{
			MethodName: "AppendChildSpace",
			Handler:    _Msg_AppendChildSpace_Handler,
		},
		{
			MethodName: "NewChildSpace",
			Handler:    _Msg_NewChildSpace_Handler,
		},
		{
			MethodName: "UpdateSpace",
			Handler:    _Msg_UpdateSpace_Handler,
		},
		{
			MethodName: "UpdateKeychain",
			Handler:    _Msg_UpdateKeychain_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "wardenprotocol/identity/tx.proto",
}

func (m *MsgNewSpace) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgNewSpace) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgNewSpace) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.AdditionalOwners) > 0 {
		for iNdEx := len(m.AdditionalOwners) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.AdditionalOwners[iNdEx])
			copy(dAtA[i:], m.AdditionalOwners[iNdEx])
			i = encodeVarintTx(dAtA, i, uint64(len(m.AdditionalOwners[iNdEx])))
			i--
			dAtA[i] = 0x22
		}
	}
	if m.SignIntentId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.SignIntentId))
		i--
		dAtA[i] = 0x18
	}
	if m.AdminIntentId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.AdminIntentId))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgNewSpaceResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgNewSpaceResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgNewSpaceResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Address) > 0 {
		i -= len(m.Address)
		copy(dAtA[i:], m.Address)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Address)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgAddSpaceOwner) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgAddSpaceOwner) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgAddSpaceOwner) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Btl != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Btl))
		i--
		dAtA[i] = 0x20
	}
	if len(m.NewOwner) > 0 {
		i -= len(m.NewOwner)
		copy(dAtA[i:], m.NewOwner)
		i = encodeVarintTx(dAtA, i, uint64(len(m.NewOwner)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.SpaceAddr) > 0 {
		i -= len(m.SpaceAddr)
		copy(dAtA[i:], m.SpaceAddr)
		i = encodeVarintTx(dAtA, i, uint64(len(m.SpaceAddr)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgAddSpaceOwnerResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgAddSpaceOwnerResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgAddSpaceOwnerResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgRemoveSpaceOwner) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgRemoveSpaceOwner) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgRemoveSpaceOwner) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Btl != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Btl))
		i--
		dAtA[i] = 0x20
	}
	if len(m.Owner) > 0 {
		i -= len(m.Owner)
		copy(dAtA[i:], m.Owner)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Owner)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.SpaceAddr) > 0 {
		i -= len(m.SpaceAddr)
		copy(dAtA[i:], m.SpaceAddr)
		i = encodeVarintTx(dAtA, i, uint64(len(m.SpaceAddr)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgRemoveSpaceOwnerResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgRemoveSpaceOwnerResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgRemoveSpaceOwnerResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgNewKeychain) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgNewKeychain) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgNewKeychain) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Fees != nil {
		{
			size, err := m.Fees.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTx(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if m.AdminIntentId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.AdminIntentId))
		i--
		dAtA[i] = 0x18
	}
	if len(m.Description) > 0 {
		i -= len(m.Description)
		copy(dAtA[i:], m.Description)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Description)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgNewKeychainResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgNewKeychainResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgNewKeychainResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Address) > 0 {
		i -= len(m.Address)
		copy(dAtA[i:], m.Address)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Address)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgAddKeychainParty) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgAddKeychainParty) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgAddKeychainParty) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Party) > 0 {
		i -= len(m.Party)
		copy(dAtA[i:], m.Party)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Party)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.KeychainAddr) > 0 {
		i -= len(m.KeychainAddr)
		copy(dAtA[i:], m.KeychainAddr)
		i = encodeVarintTx(dAtA, i, uint64(len(m.KeychainAddr)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgAddKeychainPartyResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgAddKeychainPartyResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgAddKeychainPartyResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgAppendChildSpace) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgAppendChildSpace) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgAppendChildSpace) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Btl != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Btl))
		i--
		dAtA[i] = 0x20
	}
	if len(m.ChildSpaceAddr) > 0 {
		i -= len(m.ChildSpaceAddr)
		copy(dAtA[i:], m.ChildSpaceAddr)
		i = encodeVarintTx(dAtA, i, uint64(len(m.ChildSpaceAddr)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ParentSpaceAddr) > 0 {
		i -= len(m.ParentSpaceAddr)
		copy(dAtA[i:], m.ParentSpaceAddr)
		i = encodeVarintTx(dAtA, i, uint64(len(m.ParentSpaceAddr)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgAppendChildSpaceResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgAppendChildSpaceResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgAppendChildSpaceResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgNewChildSpace) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgNewChildSpace) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgNewChildSpace) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Btl != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Btl))
		i--
		dAtA[i] = 0x18
	}
	if len(m.ParentSpaceAddr) > 0 {
		i -= len(m.ParentSpaceAddr)
		copy(dAtA[i:], m.ParentSpaceAddr)
		i = encodeVarintTx(dAtA, i, uint64(len(m.ParentSpaceAddr)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgNewChildSpaceResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgNewChildSpaceResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgNewChildSpaceResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgUpdateSpace) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateSpace) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateSpace) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Btl != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Btl))
		i--
		dAtA[i] = 0x28
	}
	if m.SignIntentId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.SignIntentId))
		i--
		dAtA[i] = 0x20
	}
	if m.AdminIntentId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.AdminIntentId))
		i--
		dAtA[i] = 0x18
	}
	if len(m.SpaceAddr) > 0 {
		i -= len(m.SpaceAddr)
		copy(dAtA[i:], m.SpaceAddr)
		i = encodeVarintTx(dAtA, i, uint64(len(m.SpaceAddr)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateSpaceResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateSpaceResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateSpaceResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgUpdateKeychain) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateKeychain) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateKeychain) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.IsActive {
		i--
		if m.IsActive {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x20
	}
	if len(m.Description) > 0 {
		i -= len(m.Description)
		copy(dAtA[i:], m.Description)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Description)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.KeychainAddr) > 0 {
		i -= len(m.KeychainAddr)
		copy(dAtA[i:], m.KeychainAddr)
		i = encodeVarintTx(dAtA, i, uint64(len(m.KeychainAddr)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateKeychainResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateKeychainResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateKeychainResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func encodeVarintTx(dAtA []byte, offset int, v uint64) int {
	offset -= sovTx(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *MsgNewSpace) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.AdminIntentId != 0 {
		n += 1 + sovTx(uint64(m.AdminIntentId))
	}
	if m.SignIntentId != 0 {
		n += 1 + sovTx(uint64(m.SignIntentId))
	}
	if len(m.AdditionalOwners) > 0 {
		for _, s := range m.AdditionalOwners {
			l = len(s)
			n += 1 + l + sovTx(uint64(l))
		}
	}
	return n
}

func (m *MsgNewSpaceResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Address)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgAddSpaceOwner) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.SpaceAddr)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.NewOwner)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Btl != 0 {
		n += 1 + sovTx(uint64(m.Btl))
	}
	return n
}

func (m *MsgAddSpaceOwnerResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgRemoveSpaceOwner) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.SpaceAddr)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Owner)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Btl != 0 {
		n += 1 + sovTx(uint64(m.Btl))
	}
	return n
}

func (m *MsgRemoveSpaceOwnerResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgNewKeychain) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Description)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.AdminIntentId != 0 {
		n += 1 + sovTx(uint64(m.AdminIntentId))
	}
	if m.Fees != nil {
		l = m.Fees.Size()
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgNewKeychainResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Address)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgAddKeychainParty) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.KeychainAddr)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Party)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgAddKeychainPartyResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgAppendChildSpace) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.ParentSpaceAddr)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.ChildSpaceAddr)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Btl != 0 {
		n += 1 + sovTx(uint64(m.Btl))
	}
	return n
}

func (m *MsgAppendChildSpaceResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgNewChildSpace) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.ParentSpaceAddr)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Btl != 0 {
		n += 1 + sovTx(uint64(m.Btl))
	}
	return n
}

func (m *MsgNewChildSpaceResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgUpdateSpace) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.SpaceAddr)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.AdminIntentId != 0 {
		n += 1 + sovTx(uint64(m.AdminIntentId))
	}
	if m.SignIntentId != 0 {
		n += 1 + sovTx(uint64(m.SignIntentId))
	}
	if m.Btl != 0 {
		n += 1 + sovTx(uint64(m.Btl))
	}
	return n
}

func (m *MsgUpdateSpaceResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgUpdateKeychain) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.KeychainAddr)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Description)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.IsActive {
		n += 2
	}
	return n
}

func (m *MsgUpdateKeychainResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func sovTx(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozTx(x uint64) (n int) {
	return sovTx(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *MsgNewSpace) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgNewSpace: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgNewSpace: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field AdminIntentId", wireType)
			}
			m.AdminIntentId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.AdminIntentId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SignIntentId", wireType)
			}
			m.SignIntentId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.SignIntentId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AdditionalOwners", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AdditionalOwners = append(m.AdditionalOwners, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgNewSpaceResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgNewSpaceResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgNewSpaceResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Address", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Address = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgAddSpaceOwner) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgAddSpaceOwner: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgAddSpaceOwner: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SpaceAddr", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SpaceAddr = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NewOwner", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.NewOwner = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Btl", wireType)
			}
			m.Btl = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Btl |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgAddSpaceOwnerResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgAddSpaceOwnerResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgAddSpaceOwnerResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgRemoveSpaceOwner) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgRemoveSpaceOwner: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgRemoveSpaceOwner: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SpaceAddr", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SpaceAddr = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Owner", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Owner = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Btl", wireType)
			}
			m.Btl = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Btl |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgRemoveSpaceOwnerResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgRemoveSpaceOwnerResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgRemoveSpaceOwnerResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgNewKeychain) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgNewKeychain: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgNewKeychain: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Description", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Description = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field AdminIntentId", wireType)
			}
			m.AdminIntentId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.AdminIntentId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Fees", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Fees == nil {
				m.Fees = &KeychainFees{}
			}
			if err := m.Fees.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgNewKeychainResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgNewKeychainResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgNewKeychainResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Address", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Address = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgAddKeychainParty) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgAddKeychainParty: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgAddKeychainParty: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field KeychainAddr", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.KeychainAddr = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Party", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Party = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgAddKeychainPartyResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgAddKeychainPartyResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgAddKeychainPartyResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgAppendChildSpace) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgAppendChildSpace: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgAppendChildSpace: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ParentSpaceAddr", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ParentSpaceAddr = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ChildSpaceAddr", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ChildSpaceAddr = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Btl", wireType)
			}
			m.Btl = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Btl |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgAppendChildSpaceResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgAppendChildSpaceResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgAppendChildSpaceResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgNewChildSpace) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgNewChildSpace: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgNewChildSpace: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ParentSpaceAddr", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ParentSpaceAddr = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Btl", wireType)
			}
			m.Btl = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Btl |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgNewChildSpaceResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgNewChildSpaceResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgNewChildSpaceResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateSpace) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateSpace: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateSpace: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SpaceAddr", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SpaceAddr = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field AdminIntentId", wireType)
			}
			m.AdminIntentId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.AdminIntentId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SignIntentId", wireType)
			}
			m.SignIntentId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.SignIntentId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Btl", wireType)
			}
			m.Btl = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Btl |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateSpaceResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateSpaceResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateSpaceResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateKeychain) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateKeychain: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateKeychain: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field KeychainAddr", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.KeychainAddr = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Description", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Description = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field IsActive", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.IsActive = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateKeychainResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateKeychainResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateKeychainResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipTx(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowTx
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthTx
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupTx
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthTx
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthTx        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowTx          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupTx = fmt.Errorf("proto: unexpected end of group")
)
